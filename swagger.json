{
  "openapi": "3.0.1",
  "info": {
    "version": "1.0.0",
    "title": "Wallet API docs",
    "description": "API documentation for Team project 'Wallet'. [Backend github repository](https://github.com/VladVinichenko/Wallet_API) ",
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "consumes": ["application/json"],
  "produces": ["application/json"],
  "servers": [{ "url": "https://wallet-api.netlify.app" }],
  "tags": [
    {
      "name": "Users management",
      "description": "endpoints"
    },
    {
      "name": "Transactions management",
      "description": "endpoints"
    }
  ],
  "paths": {
    "/api/auth/signup": {
      "post": {
        "tags": ["Users management"],
        "summary": "User registration",
        "parameters": [],
        "requestBody": {
          "description": "Registration's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegistrationRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegistrationResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "409": {
            "description": "User with provided email already exists",
            "content": {}
          }
        }
      }
    },
    "/api/auth/verify/:verificationToken": {
      "post": {
        "tags": ["Users management"],
        "summary": "User verification",
        "parameters": [
          {
            "name": "verificationToken",
            "in": "path",
            "description": "Verification Token",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VerificationResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "404": {
            "description": "Not found",
            "content": {}
          }
        }
      }
    },
    "/api/auth/signin": {
      "post": {
        "tags": ["Users management"],
        "summary": "User authentication",
        "parameters": [],
        "requestBody": {
          "description": "Authentication's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SigninRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SigninResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "401": {
            "description": "Email not found / Email not verified / Password is wrong",
            "content": {}
          }
        }
      }
    },
    "/api/auth/signout": {
      "get": {
        "tags": ["Users management"],
        "summary": "Signout",
        "security": [{ "Bearer": [] }],
        "parameters": [],
        "responses": {
          "204": {
            "description": "No content",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          }
        }
      }
    },
    "/api/auth/refresh": {
      "post": {
        "tags": ["Users management"],
        "summary": "Update user's refresh token",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RefreshTokenResponse"
                }
              }
            }
          },
          "400": {
            "description": "No token provided",
            "content": {}
          },
          "401": {
            "description": "Invalid Signature",
            "content": {}
          }
        }
      }
    },
    "/api/users/current": {
      "get": {
        "tags": ["Users management"],
        "summary": "Getting the current user",
        "security": [{ "Bearer": [] }],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CurrentUserResponse"
                }
              }
            }
          },
          "500": {
            "description": "Invalid signature",
            "content": {}
          }
        }
      }
    },
    "/api/finance": {
      "get": {
        "tags": ["Transactions management"],
        "summary": "Get all information about user's transactions by date",
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AllTransactionsResponse"
                }
              }
            }
          },
          "500": {
            "description": "invalid token",
            "content": {}
          }
        }
      }
    },
    "/api/finance/": {
      "post": {
        "tags": ["Transactions management"],
        "summary": "Create a transaction",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [],
        "requestBody": {
          "description": "Transaction's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TransactionCreateRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransactionCreateResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body) / No token provided",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          }
        }
      }
    },
    "/api/finance/balance": {
      "get": {
        "tags": ["Transactions management"],
        "summary": "Get balance information about user's ",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [],
        "requestBody": {
          "description": "Transaction's object",
          "required": false,
          "content": {}
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransactionsTotalResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (invalid access token)",
            "content": {}
          }
        }
      }
    },
    "/api/finance/statistics?month=${month}&year=${year}": {
      "get": {
        "tags": ["Transactions management"],
        "summary": "Get all information about user's transactions category",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "month",
            "in": "query",
            "description": "Required Month",
            "required": true,
            "type": "string"
          },
          {
            "name": "year",
            "in": "query",
            "description": "Required Year",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransactionsStatisticsResponse"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized / Token expired",
            "content": {}
          }
        }
      }
    },
    "/api/finance/categories": {
      "get": {
        "tags": ["Transactions management"],
        "summary": "Get all user's categories of transactions",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListOfTransactionsCategoriesResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "RegistrationRequest": {
        "required": ["name", "email", "password"],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "Guest",
            "description": "User's name",
            "minLength": 3,
            "maxLength": 50
          },
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email",
            "minLength": 3,
            "maxLength": 50
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "qazwsxedc",
            "minLength": 6,
            "maxLength": 50
          }
        }
      },
      "RegistrationResponse": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          }
        }
      },
      "VerificationResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "User's email",
            "example": "Your email verified"
          }
        }
      },
      "SigninRequest": {
        "required": ["email", "password"],
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email",
            "minLength": 3,
            "maxLength": 50
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "minLength": 6,
            "maxLength": 50,
            "example": "qazwsxedc"
          }
        }
      },
      "SigninResponse": {
        "type": "object",
        "properties": {
          "accessToken": {
            "type": "string",
            "description": "Session's access token (needed for all requests)",
            "example": "3Y2UyNzQiLCJzaWQiOiI1ZmMyZDJmY2UxZDIwNTA2NzAyYmRkMjIiLCJpYXQiOjE2MDY2MDM1MTYsImV4cCI6MTYwNjYwNzExNn0.rJ_QjU4KvA76H96RHsvOBChK0Vjbd0NmqjMxdQVJIXA"
          },
          "name": {
            "type": "string",
            "example": "Guest",
            "description": "User's name",
            "minLength": 3,
            "maxLength": 50
          },
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email",
            "minLength": 3,
            "maxLength": 50
          }
        },
        "example": {
          "accessToken": "eyJ1aWQiOiI1ZmMyMDg1YmQwOTM2NTI4MTA3Y2UyNzQiLCJzaWQiOiI1ZmMyZDJmY2UxZDIwNTA2NzAyYmRkMjIiLCJpYXQiOjE2MDY2MDM1MTYsImV4cCI6MTYwNjYwNzExNn0.rJ_QjU4KvA76H96RHsvOBChK0Vjbd0NmqjMxdQVJIXA",
          "user": {
            "name": "Test Name",
            "email": "testemailrgr@gmail.com"
          }
        }
      },
      "RefreshTokenResponse": {
        "type": "object",
        "properties": {
          "accessToken": {
            "type": "string",
            "description": "Session's refresh token",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6ImY2MWJjMDE3LWU4OGItNDVlZi04YmI4LWZlNjM1ZjY2Njk3ZiIsImlhdCI6MTY1MzIwOTA2MSwiZXhwIjoxNjUzMjEyNjYxf"
          }
        }
      },
      "CurrentUserResponse": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "Guest",
            "description": "User's name",
            "minLength": 3,
            "maxLength": 50
          },
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email",
            "minLength": 3,
            "maxLength": 50
          }
        },
        "example": {
          "user": {
            "name": "Test Name",
            "email": "testemailrgr@gmail.com"
          }
        }
      },
      "AllTransactionsRequest": {
        "optional": ["year", "month"],
        "type": "object",
        "example": "SALARY",
        "properties": {
          "year": {
            "type": "string",
            "description": "Optional. Number of year when transactions were payed. If the year wasn't indicated in URL-request string, the default data for the current year returned",
            "example": "2021"
          },
          "month": {
            "type": "string",
            "description": "Optional. Number of month when transactions were payed. If the month wasn't indicated in URL-request string, the default data for the current month returned",
            "example": "2"
          }
        }
      },
      "AllTransactionsResponse": {
        "type": "object",
        "required": [
          "totalDocs",
          "offset",
          "limit",
          "totalPages",
          "page",
          "pagingCounter",
          "hasPrevPage",
          "hasNextPage",
          "prevPage",
          "nextPage"
        ],
        "properties": {
          "transaction": {
            "type": "object",
            "description": "Objects with all characteristics for paginate information about user's transactions and array of last one",
            "properties": {
              "total": {
                "type": "integer",
                "description": "How many transactions have user",
                "example": 4
              },
              "limit": {
                "type": "integer",
                "description": "Maximum amount of transactions which could sent server in one request",
                "example": 5
              },
              "page": {
                "type": "integer",
                "description": "Number of page which was sent from server",
                "example": 1
              },
              "pages": {
                "type": "integer",
                "description": "Amount of total pages with all transactions",
                "example": 1
              }
            }
          }
        },
        "example": {
          "transition": [
            {
              "_id": "628356b897d487932b456332",
              "date": "1970-01-24T18:09:07.654Z",
              "type": "income",
              "category": "628356e997d487932b45633c",
              "comment": "January Bonus to Google corp. in USA",
              "sum": "8000.00",
              "balance": "14900.00",
              "owner": "6281332dfd26d41c090754ce"
            },
            {
              "_id": "6283575c97d487932b456347",
              "date": "1970-01-22T10:35:47.654Z",
              "type": "income",
              "category": "628356e997d487932b45633b",
              "comment": "January Bonus",
              "sum": "8000.00",
              "balance": "14900.00",
              "owner": "6281332dfd26d41c090754ce"
            },
            {
              "_id": "628356b897d487932b456338",
              "date": "1970-01-20T13:35:47.654Z",
              "type": "outlay",
              "category": "628356e997d487932b45633e",
              "comment": "Gift for wife",
              "sum": "300.00",
              "balance": "15500.00",
              "owner": "6281332dfd26d41c090754ce"
            },
            {
              "_id": "628356b897d487932b45632c",
              "date": "1970-01-20T03:06:52.292Z",
              "type": "income",
              "category": "628356e997d487932b45633e",
              "comment": "January Bonus",
              "sum": "8000.00",
              "owner": "6281332dfd26d41c090754ce",
              "balance": "50000.00"
            },
            {
              "_id": "628356b897d487932b456336",
              "date": "1970-01-20T03:02:27.654Z",
              "type": "income",
              "category": "628356e997d487932b45633b",
              "comment": "January Bonus",
              "sum": "8000.00",
              "balance": "14900.00",
              "owner": "6281332dfd26d41c090754ce"
            },
            {
              "_id": "628356b897d487932b456333",
              "date": "1970-01-20T03:02:27.654Z",
              "type": "income",
              "category": "628356e997d487932b45633b",
              "comment": "January Bonus",
              "sum": "8000.00",
              "balance": "14900.00",
              "owner": "6281332dfd26d41c090754ce"
            },
            {
              "_id": "628356b897d487932b456330",
              "date": "1970-01-20T03:02:27.654Z",
              "type": "income",
              "category": "628356e997d487932b45633b",
              "comment": "January Bonus",
              "sum": "8000.00",
              "balance": "14900.00",
              "owner": "6281332dfd26d41c090754ce"
            },
            {
              "_id": "6283575c97d487932b456348",
              "date": "1970-01-20T03:02:27.654Z",
              "type": "outlay",
              "category": "628356e997d487932b45633b",
              "comment": "January Bonus",
              "sum": "8000.00",
              "balance": "14900.00",
              "owner": "6281332dfd26d41c090754ce"
            },
            {
              "_id": "628356b897d487932b456335",
              "date": "1970-01-20T03:02:27.654Z",
              "type": "income",
              "category": "628356e997d487932b45633b",
              "comment": "January Bonus",
              "sum": "8000.00",
              "balance": "14900.00",
              "owner": "6281332dfd26d41c090754ce"
            },
            {
              "_id": "628356b897d487932b45632e",
              "date": "1970-01-20T03:02:27.654Z",
              "type": "income",
              "category": "628356e997d487932b45633b",
              "comment": "January Bonus",
              "sum": "8000.00",
              "balance": "14900.00",
              "owner": "6281332dfd26d41c090754ce"
            }
          ],
          "total": 33,
          "limit": 10,
          "page": 1,
          "pages": 4
        }
      },
      "TransactionCreateRequest": {
        "type": "object",
        "required": ["date", "type", "category", "sum"],
        "optional": ["comment"],
        "properties": {
          "type": {
            "type": "string",
            "description": "Transaction's type",
            "example": "outlay"
          },
          "category": {
            "type": "string",
            "description": "Transaction's category",
            "example": "628356e997d487932b456343"
          },
          "sum": {
            "type": "string",
            "description": "Amount of transaction",
            "example": "850"
          },
          "date": {
            "type": "string",
            "description": "Transaction's create date",
            "example": "Tue May 10 2022 22:57:18 GMT+0300 (Eastern European Summer Time)"
          },
          "comment": {
            "type": "string",
            "description": "Comment for transaction description",
            "example": "Comment"
          }
        }
      },
      "TransactionCreateResponse": {
        "type": "object",
        "required": [
          "date",
          "type",
          "category",
          "comment",
          "sum",
          "owner",
          "balance",
          "id",
          "createdAt",
          "updatedAt"
        ],
        "properties": {
          "type": {
            "type": "string",
            "description": "Transaction's type",
            "example": "outlay"
          },
          "category": {
            "type": "string",
            "description": "Transaction's category",
            "example": "628356e997d487932b456343"
          },
          "sum": {
            "type": "number",
            "description": "Amount of transaction",
            "example": 850
          },
          "date": {
            "type": "string",
            "description": "Transaction's create date",
            "example": "2022-05-10T19:57:18.000Z"
          },
          "comment": {
            "type": "string",
            "description": "Comment for transaction description",
            "example": "Comment"
          },
          "owner": {
            "type": "string",
            "description": "User's id who creates this transaction",
            "example": "6288b87c56389bafbaa6ae9b"
          },
          "balance": {
            "type": "number",
            "description": "User's balance after add transaction",
            "example": 4867
          },
          "id": {
            "type": "string",
            "description": "Transaction's id",
            "example": "6289fe6e1da2cca94d7cfcda"
          },
          "createdAt": {
            "type": "string",
            "description": "Time when transaction was created on server",
            "example": "2022-05-22T09:12:14.973Z"
          },
          "updatedAt": {
            "type": "string",
            "description": "Time when transaction was updated on server",
            "example": "2022-05-22T09:12:14.973Z"
          }
        }
      },
      "TransactionsTotalResponse": {
        "type": "object",
        "required": ["categories"],
        "properties": {
          "totalFinance": {
            "type": "object",
            "description": "Object of total user balance",
            "properties": {
              "years": {
                "type": "array",
                "description": "Available years for statistics",
                "example": [2022, 2021, 2020, 2019, 2018]
              },
              "months": {
                "type": "array",
                "description": "Available months for statistics",
                "example": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]
              }
            }
          }
        },
        "example": {
          "aviableStatistics": {
            "years": [2022, 2021, 2020, 2019, 2018],
            "months": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]
          }
        }
      },
      "TransactionsStatisticsResponse": {
        "type": "object",
        "required": ["categories"],
        "properties": {
          "transaction": {
            "type": "object",
            "description": "Object of all categories of user's transactions with total amount of each category and also information about totalIncome and totalExpense",
            "properties": {
              "incomeStatistics": {
                "type": "number",
                "description": "Amount of all user's total income",
                "example": 1050
              },
              "outlayStatistics": {
                "type": "number",
                "description": "Amount of all user's total expense",
                "example": 550
              },
              "type": {
                "type": "string",
                "description": "Transaction's type",
                "example": "outlay"
              },
              "category": {
                "type": "string",
                "description": "Transaction's category",
                "example": "628356e997d487932b456343"
              },
              "sum": {
                "type": "number",
                "description": "Amount of transaction",
                "example": 850
              },
              "date": {
                "type": "string",
                "description": "Transaction's create date",
                "example": "2022-05-10T19:57:18.000Z"
              },
              "comment": {
                "type": "string",
                "description": "Comment for transaction description",
                "example": "Comment"
              },
              "owner": {
                "type": "string",
                "description": "User's id who creates this transaction",
                "example": "6288b87c56389bafbaa6ae9b"
              },
              "balance": {
                "type": "number",
                "description": "User's balance after add transaction",
                "example": 4867
              },
              "id": {
                "type": "string",
                "description": "Transaction's id",
                "example": "6289fe6e1da2cca94d7cfcda"
              },
              "createdAt": {
                "type": "string",
                "description": "Time when transaction was created on server",
                "example": "2022-05-22T09:12:14.973Z"
              },
              "updatedAt": {
                "type": "string",
                "description": "Time when transaction was updated on server",
                "example": "2022-05-22T09:12:14.973Z"
              }
            }
          }
        },
        "example": {
          "incomeStatistics": 5.0,
          "outlayStatistics": 4600.0,
          "statisticsByDate": [
            {
              "_id": "628d0a3b016eca86bb2d0fe9",
              "type": "outlay",
              "category": "628356e997d487932b45633d",
              "sum": 5000,
              "date": "2022-05-19T15:19:49.021Z",
              "comment": "",
              "owner": "628d0539016eca86bb2d0f45",
              "balance": -5000,
              "createdAt": "2022-05-24T16:39:23.696Z",
              "updatedAt": "2022-05-24T16:39:23.696Z"
            }
          ]
        }
      },
      "ListOfTransactionsCategoriesResponse": {
        "type": "object",
        "required": ["expenses", "incomes"],
        "properties": {
          "expenses": {
            "type": "array",
            "description": "Array of all types of user's expense categories",
            "example": [
              "Basic",
              "Products",
              "Car",
              "Self improvement",
              "Child care",
              "Household products",
              "Education",
              "Leisure",
              "Other"
            ]
          },
          "incomes": {
            "type": "object",
            "description": "Array user's income parameters",
            "example": [
              {
                "_id": "628587f997d487932b456397",
                "name": "Income",
                "color": "#FED057"
              }
            ]
          }
        },
        "example": {
          "data": [
            {
              "_id": "628356e997d487932b45633b",
              "name": "Basic",
              "color": "#FED057"
            },
            {
              "_id": "628356e997d487932b45633c",
              "name": "Products",
              "color": "#FFD8D0"
            },
            {
              "_id": "628356e997d487932b45633d",
              "name": "Car",
              "color": "#FD9498"
            },
            {
              "_id": "628356e997d487932b45633e",
              "name": "Self improvement",
              "color": "#C5BAFF"
            },
            {
              "_id": "628356e997d487932b45633f",
              "name": "Child care",
              "color": "#6E78E8"
            },
            {
              "_id": "628356e997d487932b456340",
              "name": "Household products",
              "color": "#4A56E2"
            },
            {
              "_id": "628356e997d487932b456341",
              "name": "Education",
              "color": "#81E1FF"
            },
            {
              "_id": "628356e997d487932b456342",
              "name": "Leisure",
              "color": "#24CCA7"
            },
            {
              "_id": "628356e997d487932b456343",
              "name": "Other",
              "color": "#00AD84"
            },
            {
              "_id": "628587f997d487932b456397",
              "name": "Income",
              "color": "#FED057"
            }
          ]
        }
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}
